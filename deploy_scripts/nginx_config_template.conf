# Django LLM 项目 Nginx 配置模板
# 使用方法：
# 1. 将此文件复制到 1Panel 网站配置目录
# 2. 修改域名和路径
# 3. 重启 Nginx

# HTTP 服务器（重定向到 HTTPS）
server {
    listen 80;
    listen [::]:80;
    server_name yourdomain.com www.yourdomain.com;
    
    # Let's Encrypt 证书验证
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # 强制跳转到 HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS 服务器
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name yourdomain.com www.yourdomain.com;
    
    # SSL 证书配置（1Panel 自动管理）
    ssl_certificate /path/to/your/cert.pem;
    ssl_certificate_key /path/to/your/key.pem;
    
    # SSL 安全配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # 安全头部
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # 日志配置
    access_log /opt/django_llm/logs/nginx_access.log;
    error_log /opt/django_llm/logs/nginx_error.log warn;
    
    # 客户端上传限制
    client_max_body_size 50M;
    client_body_buffer_size 1M;
    
    # 超时配置
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;
    send_timeout 300s;
    
    # Gzip 压缩
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;
    gzip_disable "msie6";
    
    # 静态文件服务
    location /static/ {
        alias /opt/django_llm/staticfiles/;
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;
        
        # 字体文件 CORS 支持
        location ~* \.(eot|ttf|woff|woff2)$ {
            add_header Access-Control-Allow-Origin *;
        }
    }
    
    # 媒体文件服务
    location /media/ {
        alias /opt/django_llm/media/;
        expires 7d;
        add_header Cache-Control "public";
        
        # 防盗链（可选）
        valid_referers none blocked yourdomain.com www.yourdomain.com;
        if ($invalid_referer) {
            return 403;
        }
    }
    
    # 健康检查端点（不记录日志）
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # robots.txt（可选）
    location = /robots.txt {
        alias /opt/django_llm/staticfiles/robots.txt;
        access_log off;
    }
    
    # favicon.ico（可选）
    location = /favicon.ico {
        alias /opt/django_llm/staticfiles/favicon.ico;
        access_log off;
        log_not_found off;
    }
    
    # 限制访问敏感路径
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 限制 .py 文件访问
    location ~* \.py$ {
        deny all;
    }
    
    # 反向代理到 Gunicorn
    location / {
        # 请求限流（防止滥用）
        limit_req zone=django_limit burst=20 nodelay;
        limit_req_status 429;
        
        # 代理设置
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # WebSocket 支持（如果需要）
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 缓冲设置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # 禁用代理重定向
        proxy_redirect off;
    }
    
    # API 端点特殊配置（更严格的限流）
    location /api/ {
        limit_req zone=api_limit burst=10 nodelay;
        
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# 限流配置（在 http 块中配置）
# 请在 nginx.conf 或 1Panel 的主配置中添加：
#
# http {
#     # 定义限流区域
#     limit_req_zone $binary_remote_addr zone=django_limit:10m rate=10r/s;
#     limit_req_zone $binary_remote_addr zone=api_limit:10m rate=5r/s;
#     
#     # 限制并发连接数
#     limit_conn_zone $binary_remote_addr zone=addr:10m;
#     limit_conn addr 10;
#     
#     # ... 其他配置
# }

