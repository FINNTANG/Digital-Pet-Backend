version: '3.8'

services:
  # PostgreSQL 数据库
  db:
    image: postgres:16-alpine
    container_name: digitalpet-db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME:-digitalpet}
      - POSTGRES_USER=${DB_USER:-digitalpet}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-changeme123}
    networks:
      - digitalpet-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-digitalpet}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 缓存（可选，用于会话存储和缓存）
  redis:
    image: redis:7-alpine
    container_name: digitalpet-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - digitalpet-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django 应用
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: digitalpet-web
    restart: unless-stopped
    command: sh /app/entrypoint.sh
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./logs:/app/logs
    environment:
      - DJANGO_SETTINGS_MODULE=mysite.production_settings
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-django-insecure-change-this-in-production}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=${DB_NAME:-digitalpet}
      - DB_USER=${DB_USER:-digitalpet}
      - DB_PASSWORD=${DB_PASSWORD:-changeme123}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - OPENAI_API_BASE=${OPENAI_API_BASE:-https://api.openai.com/v1}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - digitalpet-network
    expose:
      - "8000"

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: digitalpet-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
    depends_on:
      - web
    networks:
      - digitalpet-network

networks:
  digitalpet-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
